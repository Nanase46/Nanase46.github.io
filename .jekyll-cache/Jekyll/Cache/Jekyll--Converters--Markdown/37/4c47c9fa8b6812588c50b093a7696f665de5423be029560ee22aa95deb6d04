I".<h1 id="异常处理">异常处理</h1>

<ol>
  <li>编写错误的代码会导致异常</li>
  <li>为了让我们了解发生了什么，Python 会抛出一个异常对象。</li>
  <li>异常对象也有类型，它的类型也有父类型，最终继承于基类 Exception。</li>
</ol>

<p><img src="http://jaminzhang.github.io/images/Python/Python-Exception-Class.png" alt="Python-Exception-Class" /></p>

<h1 id="try-except-else-语句">try except else 语句</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">try</span><span class="p">:</span>
    <span class="err">一段可能出错的代码</span>             <span class="c1"># 一般容易出错的场景：网络请求、读写写入、处理与外部系统的交互
</span><span class="k">except</span> <span class="nb">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>           <span class="c1"># 把 ValueError 类型的异常对象赋值给变量 e
</span>    <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>                      <span class="c1"># 处理这个异常，当使用 print 打印 e 这个异常对象时，e 这个变量变成字符串，包含描述信息
</span><span class="k">except</span> <span class="nb">Exception</span><span class="p">:</span>
    <span class="err">处理其余所有的异常</span>
<span class="k">else</span><span class="p">:</span>
    <span class="err">没有异常时的处理代码</span>

</code></pre></div></div>

<p>except 捕获异常的语句可以有任意多个，同 else 语句一起是互斥的。</p>

<h1 id="try-finally-语句">try finally 语句</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">try</span><span class="p">:</span>
    <span class="err">一段可能出错的代码</span>
<span class="k">finally</span><span class="p">:</span>
    <span class="err">最后一定会执行的代码，</span>         <span class="c1"># 无论前面代码是否出错，最后一定会执行的代码，
</span>    <span class="err">例如</span> <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>                <span class="c1"># 常用场景是关闭网络、关闭文件等
</span>    

</code></pre></div></div>

<h1 id="抛出异常-rasie-语句">抛出异常 rasie 语句</h1>

<p><code class="highlighter-rouge">rasie e</code></p>

<p>捕获到异常时，如果不想处理，想让更外层代码知道（因为代码是通过函数一层层调用的），
可以使用 rasie 语句来抛出异常到外层。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">try</span><span class="p">:</span>
    <span class="nb">int</span><span class="p">(</span><span class="s">"a"</span><span class="p">)</span>
<span class="k">except</span> <span class="nb">ValueError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
    <span class="k">raise</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>

</code></pre></div></div>
:ET