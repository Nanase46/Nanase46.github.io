I"X<h1 id="编写收集-syslog-日志的-logstash-配置文件">编写收集 syslog 日志的 Logstash 配置文件</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">[</span>root@linux-node2 ~]# <span class="nb">cat</span> /etc/logstash/conf.d/syslog.conf 
input <span class="o">{</span>
  syslog <span class="o">{</span>
    <span class="nb">type</span> <span class="o">=&gt;</span> <span class="s2">"system-syslog"</span>
    port <span class="o">=&gt;</span> 514  
  <span class="o">}</span>
<span class="o">}</span>

output <span class="o">{</span>
  stdout <span class="o">{</span>
    codec <span class="o">=&gt;</span> rubydebug
  <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h1 id="前台方式测试-logstash-能正常收集-syslog-日志">前台方式测试 Logstash 能正常收集 syslog 日志</h1>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c"># 确认 514 端口没有被占用</span>

<span class="o">[</span>root@linux-node2 conf.d]# netstat <span class="nt">-lntup</span> | <span class="nb">grep </span>514

<span class="c"># 前台方式启动，输出到标准输出，先确保能收集</span>

<span class="o">[</span>root@linux-node2 conf.d]# /opt/logstash/bin/logstash <span class="nt">-f</span> syslog.conf 
Settings: Default pipeline workers: 1
Pipeline main started

<span class="c"># 启动 logstash 后，可以看到在监听上面配置的 514 端口</span>

<span class="o">[</span>root@linux-node2 ~]# netstat <span class="nt">-lntup</span> | <span class="nb">grep </span>514
tcp        0      0 0.0.0.0:514             0.0.0.0:<span class="k">*</span>               LISTEN      40502/java          
udp        0      0 0.0.0.0:514             0.0.0.0:<span class="k">*</span>                           40502/java    

<span class="c"># 分别在要收集 syslog 日志的服务器上配置 syslog，本文以 192.168.56.11，192.168.56.12 为例</span>

<span class="o">[</span>root@linux-node1 ~]# vim /etc/rsyslog.conf
<span class="k">*</span>.<span class="k">*</span> @@192.168.56.12:514			<span class="c"># 添加这一行</span>

<span class="o">[</span>root@linux-node1 ~]# systemctl restart rsyslog

<span class="c"># 重启后，会将服务器现有的 syslog 日志上传到 logstash</span>
<span class="c"># 确认 logstash 前台运行时标准输出可以接收到 syslog 日志后，</span>
<span class="c"># 我们再将 logstash 配置文件 syslog.conf 中的 output 部分修改如下（这样将收集到的 syslog 日志写入到 ES）:</span>

<span class="o">[</span>root@linux-node2 ~]# <span class="nb">cat</span> /etc/logstash/conf.d/syslog.conf 
input <span class="o">{</span>
  syslog <span class="o">{</span>
    <span class="nb">type</span> <span class="o">=&gt;</span> <span class="s2">"system-syslog"</span>
    port <span class="o">=&gt;</span> 514  
  <span class="o">}</span>
<span class="o">}</span>

output <span class="o">{</span>
  elasticsearch <span class="o">{</span>
    hosts <span class="o">=&gt;</span> <span class="o">[</span><span class="s2">"192.168.56.12:9200"</span><span class="o">]</span>
    index <span class="o">=&gt;</span> <span class="s2">"system-syslog-%{+YYYY.MM}"</span>    <span class="c"># 数据量不大的情况下索引数量不能配置太多，否则索引和分片过多会影响性能</span>
  <span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h1 id="后台运行-logstash确认索引数据写入到-es">后台运行 Logstash，确认索引数据写入到 ES</h1>

<p>重启运行 Logstash，然后在 ES head 插件中确认索引及数据是否写入。</p>

<p><img src="http://jaminzhang.github.io/images/ELK/ES-system-syslog.png" alt="ES-system-syslog" /></p>

<h1 id="kibana-中配置索引">Kibana 中配置索引</h1>

<p>确认数据写入 ES 后，在 Kibana 中添加配置索引。</p>

<p><img src="http://jaminzhang.github.io/images/ELK/Kibana-Configure-index-pattern.png" alt="Kibana-Configure-index-pattern" /><br />
<img src="http://jaminzhang.github.io/images/ELK/Kibana-system-syslog.png" alt="Kibana-system-syslog" /></p>

<blockquote>

  <p>注意：如果一个索引中的字段有增加或减少需要刷新。</p>
</blockquote>

<h1 id="ref">Ref</h1>
<p><a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-syslog.html">syslog</a><br />
<a href="https://www.elastic.co/guide/en/logstash/current/config-examples.html">Logstash Configuration Examples</a><br />
<a href="http://kibana.logstash.es/content/logstash/scale/rsyslog.html">Rsyslog</a></p>
:ET