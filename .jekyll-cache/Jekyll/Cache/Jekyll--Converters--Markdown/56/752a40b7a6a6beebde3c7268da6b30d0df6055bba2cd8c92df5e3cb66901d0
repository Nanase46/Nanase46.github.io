I"5<h1 id="类和对象实例">类和对象(实例)</h1>

<p>之前我们学习了函数和模块等组织代码的方式，但随着代码的增多，函数和模块还是不够用。<br />
根据有项研究，如果代码超过 10000 行，如果只用函数和模块来组织代码，那么程序员将很难掌控代码。
所以在大型项目中，为了更好地组织代码，会使用类和对象。</p>

<p>类和对象之间的关系非常相似于概念和实体的关系。</p>

<p><img src="http://jaminzhang.github.io/images/Python/Python-Class-Object.png" alt="Python-Class-Object" /></p>

<h1 id="创建类">创建类</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">class</span> <span class="nc">Cat</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>                      <span class="c1"># 定义概念 猫：       PS: 注意使用 class 关键词，Python 3 中不需要"(object)"
</span>    <span class="n">leg_cnt</span> <span class="o">=</span> <span class="mi">4</span>                         <span class="c1"># 腿数 = 4        PS: 可以做为类属性
</span>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cat_name</span><span class="p">):</span>       <span class="c1"># 定义 创建过程（实体，猫名）：   PS: 实例的创建过程，类的实例化，第一个参数 self 是必须的，  
</span>                                        <span class="c1"># self 可以理解为类实例化时的已经存在的初始实体对象，很多属性还没有被设置
</span>        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">cat_name</span>            <span class="c1"># 实体.名字 = 猫名  PS: 给实体设置 name 属性，同时将传入的参数 cat_name 赋值给它
</span>                                        <span class="c1"># name 这个变量是附属于 self 实例的（self.name），不能够直接使用 name 变量
</span>    
    <span class="k">def</span> <span class="nf">change_name</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cat_name</span><span class="p">):</span>    <span class="c1"># 定义 改名字（实体，猫名）:  PS: 类里面的函数就叫类的方法，第一个参数是 self，类的方法实际上定义类这个概念能做什么
</span>        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">cat_name</span>            <span class="c1"># 实体.名字 = 猫名
</span>    
    <span class="k">def</span> <span class="nf">climb</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>                    <span class="c1"># 定义 爬树(实体):
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"cat </span><span class="si">%</span><span class="s">s climb a tree"</span> <span class="o">%</span>   <span class="c1"># 输出 （猫爬了树）
</span>        <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>

</code></pre></div></div>

<h1 id="创建并使用实例">创建并使用实例</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="n">tom</span> <span class="o">=</span> <span class="n">Cat</span><span class="p">(</span><span class="s">"Tom"</span><span class="p">)</span>                <span class="c1"># 类的实例化，Cat 实例化后赋值给 tom 这个变量，tom 是一只真正的猫，它的名字叫"Tom"
</span><span class="n">tom</span><span class="o">.</span><span class="n">chang_name</span><span class="p">(</span><span class="s">"ATom"</span><span class="p">)</span>          <span class="c1"># tom 改名字为 "ATom"
</span><span class="n">tom</span><span class="o">.</span><span class="n">climb</span><span class="p">()</span>                     <span class="c1"># tom 去爬树
</span><span class="n">tom</span><span class="o">.</span><span class="n">leg_cnt</span> <span class="o">==</span> <span class="mi">4</span>                <span class="c1"># True tom 的腿数是 4
</span>
</code></pre></div></div>

<h1 id="类的继承">类的继承</h1>

<p>继承的类叫做子类。</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">class</span> <span class="nc">PersianCat</span><span class="p">(</span><span class="n">Cat</span><span class="p">):</span>              <span class="c1"># 定义概念 波斯猫（继承猫）：
</span>    <span class="k">def</span> <span class="nf">__init</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">cat_name</span><span class="p">):</span>     <span class="c1"># 定义 创建过程（实体，猫名）：
</span>        <span class="nb">super</span><span class="p">(</span><span class="n">PersianCat</span><span class="p">,</span> <span class="bp">self</span><span class="p">)</span><span class="o">.</span><span class="n">__init__</span><span class="p">(</span><span class="n">cat_name</span><span class="p">)</span>  <span class="c1"># 执行猫的创建过程（猫名），Python 3 中"PersianCat, self"可不写
</span>    
    <span class="k">def</span> <span class="nf">jump</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>                 <span class="c1"># 定义 跳(实体)：
</span>        <span class="k">print</span><span class="p">(</span><span class="s">"try jump"</span><span class="p">)</span>           <span class="c1"># 打印 ("try jump")
</span>
<span class="n">jack</span> <span class="o">=</span> <span class="n">PersianCat</span><span class="p">(</span><span class="s">"jack"</span><span class="p">)</span>           <span class="c1"># jack 是一只真实的波斯猫
</span><span class="n">jack</span><span class="o">.</span><span class="n">jump</span><span class="p">()</span>                         <span class="c1"># jack 跳    
</span><span class="n">jack</span><span class="o">.</span><span class="n">climb</span><span class="p">()</span>                        <span class="c1"># jack 爬树
</span>        
</code></pre></div></div>

<h1 id="ref">Ref</h1>
<p><a href="http://www.runoob.com/python/python-object.html">Python 面向对象</a><br />
<a href="http://blog.csdn.net/wklken/article/details/6313265">Python 笔记——类定义</a></p>
:ET